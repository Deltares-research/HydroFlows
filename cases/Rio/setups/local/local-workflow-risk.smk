# This file was generated by hydroflows version 0.1.0.dev

configfile: "local-workflow-risk.config.yml"

PLUVIAL_DESIGN_EVENTS=["p_event01", "p_event02", "p_event03"]

rule all:
    input:
        "c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/merged_data_catalog_local_global.yml",
        "c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/preprocessed-data/output_scalar_resampled_precip_station11.nc",
        expand("events/design/{pluvial_design_events}.yml", pluvial_design_events=PLUVIAL_DESIGN_EVENTS),
        "models/sfincs/sfincs.inp",
        "c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/preprocessed-data/census2010.gpkg",
        expand("models/sfincs/simulations/{pluvial_design_events}/sfincs.inp", pluvial_design_events=PLUVIAL_DESIGN_EVENTS),
        "c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/preprocessed-data/data_catalog.yml",
        expand("models/sfincs/simulations/{pluvial_design_events}/sfincs_map.nc", pluvial_design_events=PLUVIAL_DESIGN_EVENTS),
        "c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/merged_data_catalog_all.yml",
        expand("models/sfincs/simulations/{pluvial_design_events}/zsmax_{pluvial_design_events}.nc", pluvial_design_events=PLUVIAL_DESIGN_EVENTS),
        expand("output/hazard/hmax_{pluvial_design_events}.tif", pluvial_design_events=PLUVIAL_DESIGN_EVENTS),
        "models/fiat/settings.toml",
        "models/flood_adapt_builder/fa_build.toml",
        "models/fiat/simulations/pluvial_design_events/hazard/hazard.nc",
        "models/fiat/simulations/pluvial_design_events/output/spatial.gpkg",

rule merge_global_local_catalogs:
    input:
        catalog_path1=config["catalog_path_global"],
        catalog_path2=config["catalog_path_local"],
    output:
        merged_catalog_path="c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/merged_data_catalog_local_global.yml",
    shell:
        """
        hydroflows method merge_catalogs \
        catalog_path1="{input.catalog_path1}" \
        catalog_path2="{input.catalog_path2}" \
        merged_catalog_path="{output.merged_catalog_path}" \
        """

rule preprocess_local_rainfall:
    input:
        script=config["preprocess_local_rainfall_script"],
    output:
        precip_nc="c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/preprocessed-data/output_scalar_resampled_precip_station11.nc",
    script:
        "c:/Users/rautenba/repos/HydroFlows/cases/Rio/scripts/preprocess_local_precip.py"

rule pluvial_design_events:
    input:
        precip_nc=rules.preprocess_local_rainfall.output.precip_nc,
    params:
        event_root=config["pluvial_design_events_event_root"],
        rps=config["rps"],
        wildcard=config["pluvial_design_events_wildcard"],
        event_names=PLUVIAL_DESIGN_EVENTS,
    output:
        event_yaml=expand("events/design/{pluvial_design_events}.yml", pluvial_design_events=PLUVIAL_DESIGN_EVENTS),
        event_csv=expand("events/design/{pluvial_design_events}.csv", pluvial_design_events=PLUVIAL_DESIGN_EVENTS),
        event_set_yaml="events/design/pluvial_design_events.yml",
    shell:
        """
        hydroflows method pluvial_design_events \
        precip_nc="{input.precip_nc}" \
        event_root="{params.event_root}" \
        rps="{params.rps}" \
        wildcard="{params.wildcard}" \
        event_names="{params.event_names}" \
        """

rule sfincs_build:
    input:
        region=config["region"],
        config=config["hydromt_sfincs_config"],
        catalog_path=rules.merge_global_local_catalogs.output.merged_catalog_path,
    params:
        sfincs_root=config["sfincs_build_sfincs_root"],
    output:
        sfincs_inp="models/sfincs/sfincs.inp",
        sfincs_region="models/sfincs/gis/region.geojson",
        sfincs_subgrid_dep="models/sfincs/subgrid/dep_subgrid.tif",
    shell:
        """
        hydroflows method sfincs_build \
        region="{input.region}" \
        config="{input.config}" \
        catalog_path="{input.catalog_path}" \
        sfincs_root="{params.sfincs_root}" \
        """

rule fiat_prep_exposure:
    input:
        script=config["fiat_prep_exposure_script"],
        region=rules.sfincs_build.output.sfincs_region,
    output:
        census="c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/preprocessed-data/census2010.gpkg",
        building_footprints="c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/preprocessed-data/building_footprints.gpkg",
        entrances="c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/preprocessed-data/entrances.gpkg",
    script:
        "c:/Users/rautenba/repos/HydroFlows/cases/Rio/scripts/clip_exposure.py"

rule sfincs_update:
    input:
        sfincs_inp=rules.sfincs_build.output.sfincs_inp,
        event_yaml="events/design/{pluvial_design_events}.yml",
    params:
        event_name="{pluvial_design_events}",
    output:
        sfincs_out_inp="models/sfincs/simulations/{pluvial_design_events}/sfincs.inp",
    shell:
        """
        hydroflows method sfincs_update_forcing \
        sfincs_inp="{input.sfincs_inp}" \
        event_yaml="{input.event_yaml}" \
        event_name="{params.event_name}" \
        """

rule fiat_preprocess_exposure:
    input:
        script=config["fiat_preprocess_exposure_script"],
        census=rules.fiat_clip_exposure.output.census,
        building_footprints=rules.fiat_clip_exposure.output.building_footprints,
        entrances=rules.fiat_clip_exposure.output.entrances,
    output:
        preprocessed_data_catalog="c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/preprocessed-data/data_catalog.yml",
    script:
        "c:/Users/rautenba/repos/HydroFlows/cases/Rio/scripts/preprocess_exposure.py"

rule sfincs_run:
    input:
        sfincs_inp=rules.sfincs_update.output.sfincs_out_inp,
    params:
        sfincs_exe=config["sfincs_exe"],
    output:
        sfincs_map="models/sfincs/simulations/{pluvial_design_events}/sfincs_map.nc",
    shell:
        """
        hydroflows method sfincs_run \
        sfincs_inp="{input.sfincs_inp}" \
        sfincs_exe="{params.sfincs_exe}" \
        """

rule merge_all_catalogs:
    input:
        catalog_path1=rules.merge_global_local_catalogs.output.merged_catalog_path,
        catalog_path2=rules.fiat_preprocess_exposure.output.preprocessed_data_catalog,
    output:
        merged_catalog_path="c:/Users/rautenba/repos/HydroFlows/cases/Rio/data/merged_data_catalog_all.yml",
    shell:
        """
        hydroflows method merge_catalogs \
        catalog_path1="{input.catalog_path1}" \
        catalog_path2="{input.catalog_path2}" \
        merged_catalog_path="{output.merged_catalog_path}" \
        """

rule sfincs_post:
    input:
        sfincs_map=rules.sfincs_run.output.sfincs_map,
    params:
        output_root="models/sfincs/simulations/{pluvial_design_events}",
        event_name="{pluvial_design_events}",
    output:
        sfincs_zsmax="models/sfincs/simulations/{pluvial_design_events}/zsmax_{pluvial_design_events}.nc",
    shell:
        """
        hydroflows method sfincs_postprocess \
        sfincs_map="{input.sfincs_map}" \
        output_root="{params.output_root}" \
        event_name="{params.event_name}" \
        """

rule sfincs_downscale:
    input:
        sfincs_map=rules.sfincs_run.output.sfincs_map,
        sfincs_subgrid_dep=rules.sfincs_build.output.sfincs_subgrid_dep,
    params:
        output_root=config["sfincs_downscale_output_root"],
        event_name="{pluvial_design_events}",
    output:
        hazard_tif="output/hazard/hmax_{pluvial_design_events}.tif",
    shell:
        """
        hydroflows method sfincs_downscale \
        sfincs_map="{input.sfincs_map}" \
        sfincs_subgrid_dep="{input.sfincs_subgrid_dep}" \
        output_root="{params.output_root}" \
        event_name="{params.event_name}" \
        """

rule fiat_build:
    input:
        region=rules.sfincs_build.output.sfincs_region,
        config=config["hydromt_fiat_config"],
        catalog_path=rules.merge_all_catalogs.output.merged_catalog_path,
        ground_elevation=rules.sfincs_build.output.sfincs_subgrid_dep,
    params:
        fiat_root=config["fiat_build_fiat_root"],
    output:
        fiat_cfg="models/fiat/settings.toml",
    shell:
        """
        hydroflows method fiat_build \
        region="{input.region}" \
        config="{input.config}" \
        catalog_path="{input.catalog_path}" \
        ground_elevation="{input.ground_elevation}" \
        fiat_root="{params.fiat_root}" \
        """

rule floodadapt_build:
    input:
        sfincs_inp=rules.sfincs_build.output.sfincs_inp,
        fiat_cfg=rules.fiat_build.output.fiat_cfg,
        event_set_yaml=rules.pluvial_design_events.output.event_set_yaml,
    params:
        output_dir=config["floodadapt_build_output_dir"],
    output:
        fa_build_toml="models/flood_adapt_builder/fa_build.toml",
        fiat_out_cfg="models/flood_adapt_builder/fiat/settings.toml",
        sfincs_out_inp="models/flood_adapt_builder/sfincs/sfincs.inp",
        probabilistic_set="models/flood_adapt_builder/pluvial_design_events/pluvial_design_events.toml",
    shell:
        """
        hydroflows method setup_flood_adapt \
        sfincs_inp="{input.sfincs_inp}" \
        fiat_cfg="{input.fiat_cfg}" \
        event_set_yaml="{input.event_set_yaml}" \
        output_dir="{params.output_dir}" \
        """

rule fiat_update:
    input:
        fiat_cfg=rules.fiat_build.output.fiat_cfg,
        hazard_maps=expand("models/sfincs/simulations/{pluvial_design_events}/zsmax_{pluvial_design_events}.nc", pluvial_design_events=PLUVIAL_DESIGN_EVENTS),
        event_set_yaml=rules.pluvial_design_events.output.event_set_yaml,
    params:
        sim_name=config["pluvial_design_events_wildcard"],
    output:
        fiat_hazard="models/fiat/simulations/pluvial_design_events/hazard/hazard.nc",
        fiat_out_cfg="models/fiat/simulations/pluvial_design_events/settings.toml",
    shell:
        """
        hydroflows method fiat_update_hazard \
        fiat_cfg="{input.fiat_cfg}" \
        hazard_maps="{input.hazard_maps}" \
        event_set_yaml="{input.event_set_yaml}" \
        sim_name="{params.sim_name}" \
        """

rule fiat_run:
    input:
        fiat_cfg=rules.fiat_update.output.fiat_out_cfg,
    params:
        fiat_exe=config["fiat_exe"],
    output:
        fiat_out="models/fiat/simulations/pluvial_design_events/output/spatial.gpkg",
    shell:
        """
        hydroflows method fiat_run \
        fiat_cfg="{input.fiat_cfg}" \
        fiat_exe="{params.fiat_exe}" \
        """

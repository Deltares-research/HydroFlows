"""Wflow run method."""

import subprocess
from pathlib import Path

from pydantic import BaseModel, Field, FilePath

from hydroflows.methods.method import Method

__all__ = ["WflowRun"]


class Input(BaseModel):
    """Input parameters.

    This class represents the input data required for the `WflowRun` method.
    """

    wflow_toml: FilePath
    """The file path to the Wflow (toml) configuration file from the
    Wflow model that needs to be run."""


class Output(BaseModel):
    """Output parameters.

    This class represents the output data generated by the `WflowRun` method.
    """

    # TODO: should if this file is in the wflow toml
    wflow_output_timeseries: Path = Field(
        ...,
        description="The path to the generated Wflow output timeseries. Note that "
        "the output file should be in the Wflow toml configuration, for "
        "example, in case that a model was updated using the WflowUpdateForcing "
        "method and includes Sfincs src outflow locations (built using "
        "the WflowBuild method), the file should be named as output_scalar.nc.",
        example="/path/to/output_scalar.nc",
    )


class Params(BaseModel):
    """Parameters.

    Instances of this class are used in the `WflowRun`
    method to define the required settings.

    See Also
    --------
    hydromt_wflow.WflowModel
        For more details on the WflowModel used in hydromt_wflow.
    """

    wflow_bin: Path
    """The path to the wflow executable."""

    julia_num_threads: int = 4
    """The number of the threads to be used from Julia."""


class WflowRun(Method):
    """Rule for running a Wflow model.

    This class utilizes the `Params`, `Input`, and `Output` classes to
    run an existing Wflow model.

    Attributes
    ----------
    name : str
        The name of the method.
        Default is "wflow_run".
    params : Params
        The parameters to run the wflow model, defined by the Params class.
    input : Input
        The input data required for the method, defined by the Input class.
    output : Output
        The output data generated by the method, defined by the Ouput class.

    See Also
    --------
    Params (class)
        For details on the parameters used in this class.
    Input (class)
        For details on the input data model.
    Output (class)
        For details on the output data model.
    """

    name: str = "wflow_run"
    params: Params
    input: Input
    output: Output

    def run(self):
        """Run the WflowRun method."""
        # Set environment variable JULIA_NUM_THREADS
        env = {"JULIA_NUM_THREADS": str(self.params.julia_num_threads)}

        # Path to the wflow_cli executable
        wflow_cli_path = self.params.wflow_bin

        # Command to run wflow_cli with the TOML file
        command = [str(wflow_cli_path), str(self.input.wflow_toml)]

        # Call the executable using subprocess
        subprocess.run(command, env=env, check=True)

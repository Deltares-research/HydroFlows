"""Get ERA5 rainfall method."""

from datetime import datetime
from pathlib import Path

import geopandas as gpd
import xarray as xr
from pydantic import BaseModel, FilePath

from hydroflows.methods.method import Method
from hydroflows.methods.rainfall.functions import get_era5_open_meteo


class Input(BaseModel):
    """Input parameters.

    This class represents the input data
    required for the :py:class:`GetERA5Rainfall` method.
    """

    sfincs_region: FilePath
    """
    The file path to the geometry file for which we want
    to download ERA5 rainfall time series at its centroid.
    An example of such a file could be the Sfincs region GeoJSON.
    """


class Output(BaseModel):
    """Output parameters.

    This class represents the output data
    generated by the :py:class:`GetERA5Rainfall` method.
    """

    time_series_nc: Path
    """
    The path to the NetCDF file that containts the derived
    ERA5 rainfall timeseries.
    """


class Params(BaseModel):
    """Parameters.

    Instances of this class are used in the :py:class:`GetERA5Rainfall`
    method to define the required settings.
    """

    start_date: datetime
    """The start date for downloading the ERA5 precipitation time series."""

    end_date: datetime
    """The end date for downloading the ERA5 precipitation time series."""


class GetERA5Rainfall(Method):
    """Rule for getting ERA5 rainfall at the centroid of a polygon region.

    This class utilizes the :py:class:`Params <hydroflows.methods.rainfall.get_ERA5_rainfall.Params>`,
    :py:class:`Input <hydroflows.methods.rainfall.get_ERA5_rainfall.Input>`, and
    :py:class:`Output <hydroflows.methods.rainfall.get_ERA5_rainfall.Output>` classes to
    get ERA5 rainfall time series at the centroid of a polygon region, using the Open-Meteo API.

    See Also
    --------
    :py:function:`hydroflows.methods.rainfall.functions.get_era5_open_meteo`
        For more details on the function used to download the data.
    """

    name: str = "get_ERA5_rainfall"
    params: Params
    input: Input
    output: Output

    def run(self):
        """Run the GetERA5Rainfall method."""
        # read the region polygon file
        gdf = gpd.read_file(self.input.sfincs_region)
        # define the target coordinate reference system as EPSG 4326
        tgt_crs = "EPSG:4326"
        # reproject the GeoDataFrame to the target CRS
        gdf = gdf.to_crs(tgt_crs)
        # Calculate the centroid of each polygon
        centroid = gdf.geometry.centroid
        # Extract latitude and longitude coordinates from the centroid geometries
        centroid_lon = centroid.x.values[0]
        centroid_lat = centroid.y.values[0]
        # get the data as df
        df = get_era5_open_meteo(
            lat=centroid_lat,
            lon=centroid_lon,
            start_date=self.params.start_date,
            end_date=self.params.end_date,
            variables="precipitation",
        )
        # convert df to xarray ds
        ds = xr.Dataset.from_dataframe(df)
        # save ds
        ds.to_netcdf(self.output.time_series_nc)

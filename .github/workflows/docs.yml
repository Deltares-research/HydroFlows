---
name: Build Documentation

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  docs:
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
#      - uses: prefix-dev/setup-pixi@v0.6.0
#        with:
#          pixi-version: "v0.21.1"
#          environments: full-py311
#      - name: Prepare pixi
#        run: |
#          pixi run --locked -e full-py311 install-hydromt
      - name: Setup Python
        uses: actions/setup-python@v5
        id: python_version
        with:
          python-version:  "3.11"
          cache: 'pip'
          cache-dependency-path: pyproject.toml

      - name: Cache hit
        run: echo '${{ steps.python_version.outputs.cache-hit }}'

      - name: Install HydroFlows
        run: |
          pip install --upgrade pip
          pip install .[doc]
      - name: Build docs
        run: |
          pushd docs
          make html
          popd

#      - name: Setup quarto
#        run: |
#          sudo apt install -y curl
#          sudo apt install -y gdebi-core
#          mkdir tmp
#          curl -L https://github.com/quarto-dev/quarto-cli/releases/download/v1.3.450/quarto-1.3.450-linux-amd64.deb --output tmp/quarto.deb
#          chmod +x tmp/quarto.deb
#          sudo gdebi -n tmp/quarto.deb
#
#      - name: Install quarto extensions
#        run: |
#          sudo apt install -y expect
#          cd docs
#          chmod u+x add_packages.sh
#          ./add_packages.sh
#
#      - name: Setup api
#        run: |
#          cd docs
#          python api.py
#          python -m quartodoc interlinks
#
#      - name: Generate docs
#        run: |
#          quarto render docs/ --execute
#          echo "DOC_VERSION=$(python -c 'from hydroflows import __version__ as v; print("dev" if "dev" in v else "v"+v.replace(".dev",""))')" >> $GITHUB_ENV
#
# TODO uncomment upload action as soon as HydroFlows is public
#      - name: Upload to GitHub Pages
#        if: ${{ github.event_name != 'pull_request' && !github.event.act }}
#        uses: peaceiris/actions-gh-pages@v3.9.3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./docs/_build/html
#          exclude_assets: .buildinfo,_sources/*,_examples/*.ipynb
#          destination_dir: ./${{ env.DOC_VERSION }}
#          keep_files: false
#          full_commit_message: Deploy ${{ env.DOC_VERSION }} to GitHub Pages

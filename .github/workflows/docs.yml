---
name: Build Documentation

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    defaults:
      run:
        shell: bash -l {0}
    permissions:
      pages: write
      id-token: write
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: "v0.39.2"
          environments: doc
          locked: false
          cache: true
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'main' }}

      - name: Restore cache of hydroflows test data
        uses: actions/cache@v4
        id: restore-cache
        with:
          path: ~/.cache/hydroflows/*.tar.gz
          key: test-data-${{ hashFiles('hydroflows/utils/registry.json') }}

      # dummy docs (not IO)
      - name: Generate dummy docs
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          pixi run -e doc docs-dummy

      # build docs and save to html
      - name: Build docs
        if : ${{ github.event_name != 'pull_request' }}
        run: |
          pixi run -e doc docs-html
        # echo "DOC_VERSION=$(pixi run -e doc get-version)" >> $GITHUB_ENV

      # Upload the html docs as an artifact
      - name: Upload artifact
        if : ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html

  deploy:
    needs: build
    if : ${{ github.event_name != 'pull_request' }}

    permissions:
      pages: write
      id-token: write

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:

    # Deploy the docs to GitHub Pages
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
